/**
 * Copyright 2011-2018 Fraunhofer-Gesellschaft zur FÃ¶rderung der angewandten Wissenschaften e.V.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.13 at 08:01:54 AM CEST 
//
package org.ogema.serialization.jaxb;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;

import org.ogema.core.channelmanager.measurements.Quality;
import org.ogema.core.channelmanager.measurements.Value;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;

/**
 * 
 * XML representation of an OGEMA SampledValue data type. This is the base class for more specialized SampledValues.
 * 
 * 
 * <p>
 * Java class for SampledValue complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SampledValue"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="time" type="{http://www.w3.org/2001/XMLSchema}long"/&gt;
 *         &lt;element name="quality" type="{http://www.w3.org/2001/XMLSchema}double" minOccurs="0"/&gt;
 *         &lt;element name="value" type="{http://www.w3.org/2001/XMLSchema}anyType"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SampledValue")
@XmlSeeAlso( { SampledTime.class, SampledOpaque.class, SampledFloat.class, SampledInteger.class, SampledString.class,
		SampledBoolean.class })
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY)
@JsonSubTypes( { @JsonSubTypes.Type(SampledBoolean.class), @JsonSubTypes.Type(SampledFloat.class),
		@JsonSubTypes.Type(SampledInteger.class), @JsonSubTypes.Type(SampledString.class),
		@JsonSubTypes.Type(SampledTime.class) })
public abstract class SampledValue {

	protected long time;
	protected Quality quality;

	// @XmlElement(required = true)
	// protected SampledValue value;
	/**
	 * Gets the value of the time property.
	 * 
	 */
	public long getTime() {
		return time;
	}

	/**
	 * Sets the value of the time property.
	 * 
	 */
	public void setTime(long value) {
		this.time = value;
	}

	/**
	 * Gets the value of the quality property.
	 * 
	 * @return possible object is {@link Double }
	 * 
	 */
	public Quality getQuality() {
		return quality;
	}

	/**
	 * Sets the value of the quality property.
	 * 
	 * @param value
	 *            allowed object is {@link Double }
	 * 
	 */
	public void setQuality(Quality value) {
		this.quality = value;
	}

	// /**
	// * Gets the value of the value property.
	// *
	// * @return
	// * possible object is
	// * {@link Object }
	// *
	// */
	// public Object getValue() {
	// return value;
	// }
	//
	// /**
	// * Sets the value of the value property.
	// *
	// * @param value
	// * allowed object is
	// * {@link Object }
	// *
	// */
	// public void setValue(Object value) {
	// this.value = value;
	// }
	public abstract void setValue(Value value);

	/** Creates the appropriate OGEMA value Object. */
	public abstract Value createOgemaValue();
}
